/*!
 * maptalks.routetopo v0.1.0-alpha.1
 * LICENSE : MIT
 * (c) 2016-2021 maptalks.org
 */
/*!
 * requires maptalks@>=0.47.0 
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t(e.maptalks=e.maptalks||{},e.maptalks)}(this,function(e,s){"use strict";var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=6371008.8,n={centimeters:100*r,centimetres:100*r,degrees:r/111325,feet:3.28084*r,inches:39.37*r,kilometers:r/1e3,kilometres:r/1e3,meters:r,metres:r,miles:r/1609.344,millimeters:1e3*r,millimetres:1e3*r,nauticalmiles:r/1852,radians:1,yards:1.0936*r},i={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function c(e,t,r){var n={type:"Feature"};return 0!==(r=void 0===r?{}:r).id&&!r.id||(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function l(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!y(e[0])||!y(e[1]))throw new Error("coordinates must contain numbers");return c({type:"Point",coordinates:e},t,r)}function o(e,t,r){void 0===r&&(r={});for(var n=0,i=e;n<i.length;n++){var o=i[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<o[o.length-1].length;a++)if(o[o.length-1][a]!==o[0][a])throw new Error("First and last Position are not equivalent.")}return c({type:"Polygon",coordinates:e},t,r)}function m(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return c({type:"LineString",coordinates:e},t,r)}function a(e,t){var r={type:"FeatureCollection"};return(t=void 0===t?{}:t).id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function u(e,t,r){return c({type:"MultiLineString",coordinates:e},t,r=void 0===r?{}:r)}function h(e,t,r){return c({type:"MultiPoint",coordinates:e},t,r=void 0===r?{}:r)}function f(e,t,r){return c({type:"MultiPolygon",coordinates:e},t,r=void 0===r?{}:r)}function p(e,t){var r=n[t=void 0===t?"kilometers":t];if(!r)throw new Error(t+" units is invalid");return e*r}function d(e,t){var r=n[t=void 0===t?"kilometers":t];if(!r)throw new Error(t+" units is invalid");return e/r}function g(e){return 180*(e%(2*Math.PI))/Math.PI}function y(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function v(e){return!!e&&e.constructor===Object}var w=Object.freeze({earthRadius:r,factors:n,unitsFactors:{centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r,yards:1.0936133},areaFactors:i,feature:c,geometry:function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return l(t).geometry;case"LineString":return m(t).geometry;case"Polygon":return o(t).geometry;case"MultiPoint":return h(t).geometry;case"MultiLineString":return u(t).geometry;case"MultiPolygon":return f(t).geometry;default:throw new Error(e+" is invalid")}},point:l,points:function(e,t,r){return void 0===r&&(r={}),a(e.map(function(e){return l(e,t)}),r)},polygon:o,polygons:function(e,t,r){return void 0===r&&(r={}),a(e.map(function(e){return o(e,t)}),r)},lineString:m,lineStrings:function(e,t,r){return void 0===r&&(r={}),a(e.map(function(e){return m(e,t)}),r)},featureCollection:a,multiLineString:u,multiPoint:h,multiPolygon:f,geometryCollection:function(e,t,r){return c({type:"GeometryCollection",geometries:e},t,r=void 0===r?{}:r)},round:function(e,t){if((t=void 0===t?0:t)&&!(0<=t))throw new Error("precision must be a positive number");return t=Math.pow(10,t||0),Math.round(e*t)/t},radiansToLength:p,lengthToRadians:d,lengthToDegrees:function(e,t){return g(d(e,t))},bearingToAzimuth:function(e){return(e%=360)<0&&(e+=360),e},radiansToDegrees:g,degreesToRadians:function(e){return e%360*Math.PI/180},convertLength:function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("length must be a positive number");return p(d(e,t),r)},convertArea:function(e,t,r){if(void 0===t&&(t="meters"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(t=i[t]))throw new Error("invalid original units");if(!(r=i[r]))throw new Error("invalid final units");return e/t*r},isNumber:y,isObject:v,validateBBox:function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!y(e))throw new Error("bbox must only contain numbers")})},validateId:function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(void 0===e?"undefined":t(e)))throw new Error("id must be a number or a string")}});function b(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function _(e){return"Feature"===e.type?e.geometry:e}function x(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var n=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}(e),i=_(t),e=i.type,t=t.bbox,o=i.coordinates;if(!t||!1!=(i=n,(t=t)[0]<=i[0]&&t[1]<=i[1]&&t[2]>=i[0]&&t[3]>=i[1])){"Polygon"===e&&(o=[o]);for(var a=!1,s=0;s<o.length&&!a;s++)if(M(n,o[s][0],r.ignoreBoundary)){for(var u=!1,l=1;l<o[s].length&&!u;)M(n,o[s][l],!r.ignoreBoundary)&&(u=!0),l++;u||(a=!0)}return a}}function M(e,t,r){for(var n=!1,i=0,o=(t=t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]?t.slice(0,t.length-1):t).length-1;i<t.length;o=i++){var a=t[i][0],s=t[i][1],u=t[o][0],l=t[o][1];if(e[1]*(a-u)+s*(u-e[0])+l*(e[0]-a)==0&&(a-e[0])*(u-e[0])<=0&&(s-e[1])*(l-e[1])<=0)return!r;s>e[1]!=l>e[1]&&e[0]<(u-a)*(e[1]-s)/(l-s)+a&&(n=!n)}return n}function L(e,t,r){if(null!==e)for(var n,i,o,a=0,s=e.type,u="FeatureCollection"===s,l="Feature"===s,c=u?e.features.length:1,h=0;h<c;h++)for(var f,p,m=(p=!!(f=u?e.features[h].geometry:l?e.geometry:e)&&"GeometryCollection"===f.type)?f.geometries.length:1,d=0;d<m;d++){var g,y=0,v=0;if(null!==(g=p?f.geometries[d]:f)){var w=g.coordinates,b=g.type,_=!r||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===t(w,a,h,y,v))return!1;a++,y++;break;case"LineString":case"MultiPoint":for(n=0;n<w.length;n++){if(!1===t(w[n],a,h,y,v))return!1;a++,"MultiPoint"===b&&y++}"LineString"===b&&y++;break;case"Polygon":case"MultiLineString":for(n=0;n<w.length;n++){for(i=0;i<w[n].length-_;i++){if(!1===t(w[n][i],a,h,y,v))return!1;a++}"MultiLineString"===b&&y++,"Polygon"===b&&v++}"Polygon"===b&&y++;break;case"MultiPolygon":for(n=0;n<w.length;n++){for(i=v=0;i<w[n].length;i++){for(o=0;o<w[n][i].length-_;o++){if(!1===t(w[n][i][o],a,h,y,v))return!1;a++}v++}y++}break;case"GeometryCollection":for(n=0;n<g.geometries.length;n++)if(!1===L(g.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function P(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function k(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function E(e,t){for(var r,n,i,o,a,s,u,l,c,h=0,f="FeatureCollection"===e.type,p="Feature"===e.type,m=f?e.features.length:1,d=0;d<m;d++){for(a=f?e.features[d].geometry:p?e.geometry:e,u=f?e.features[d].properties:p?e.properties:{},l=f?e.features[d].bbox:p?e.bbox:void 0,c=f?e.features[d].id:p?e.id:void 0,o=(s=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,n=0;n<o;n++)if(null!==(i=s?a.geometries[n]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,h,u,l,c))return!1;break;case"GeometryCollection":for(r=0;r<i.geometries.length;r++)if(!1===t(i.geometries[r],h,u,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,h,u,l,c))return!1;h++}}function S(e,l){E(e,function(e,t,r,n,i){var o,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1===l(c(e,r,{bbox:n,id:i}),t,0)?!1:void 0}switch(a){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}for(var s=0;s<e.coordinates.length;s++){var u=e.coordinates[s];if(!1===l(c({type:o,coordinates:u},r),t,s))return!1}})}function F(e,p){S(e,function(o,a,s){var u=0;if(o.geometry){var e=o.geometry.type;if("Point"!==e&&"MultiPoint"!==e){var l,c=0,h=0,f=0;return!1!==L(o,function(e,t,r,n,i){if(void 0===l||c<a||h<n||f<i)return l=e,c=a,h=n,f=i,void(u=0);n=m([l,e],o.properties);if(!1===p(n,a,s,i,u))return!1;u++,l=e})&&void 0}}})}function X(e,a){if(!e)throw new Error("geojson is required");S(e,function(e,t,r){if(null!==e.geometry){var n=e.geometry.type,i=e.geometry.coordinates;switch(n){case"LineString":if(!1===a(e,t,r,0,0))return!1;break;case"Polygon":for(var o=0;o<i.length;o++)if(!1===a(m(i[o],e.properties),t,r,o))return!1}}})}var B=Object.freeze({coordEach:L,coordReduce:function(e,o,a,t){var s=a;return L(e,function(e,t,r,n,i){s=0===t&&void 0===a?e:o(s,e,t,r,n,i)},t),s},propEach:P,propReduce:function(e,r,n){var i=n;return P(e,function(e,t){i=0===t&&void 0===n?e:r(i,e,t)}),i},featureEach:k,featureReduce:function(e,r,n){var i=n;return k(e,function(e,t){i=0===t&&void 0===n?e:r(i,e,t)}),i},coordAll:function(e){var t=[];return L(e,function(e){t.push(e)}),t},geomEach:E,geomReduce:function(e,o,a){var s=a;return E(e,function(e,t,r,n,i){s=0===t&&void 0===a?e:o(s,e,t,r,n,i)}),s},flattenEach:S,flattenReduce:function(e,n,i){var o=i;return S(e,function(e,t,r){o=0===t&&0===r&&void 0===i?e:n(o,e,t,r)}),o},segmentEach:F,segmentReduce:function(e,o,a){var s=a,u=!1;return F(e,function(e,t,r,n,i){s=!1===u&&void 0===a?e:o(s,e,t,r,n,i),u=!0}),s},lineEach:X,lineReduce:function(e,i,o){var a=o;return X(e,function(e,t,r,n){a=0===t&&void 0===o?e:i(a,e,t,r,n)}),a},findSegment:function(e,t){if(!v(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,o=t.geometryIndex||0,a=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return m([u[a=a<0?u.length+a-1:a],u[a+1]],s,t);case"Polygon":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a-1),m([u[o][a],u[o][a+1]],s,t);case"MultiLineString":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a-1),m([u[i][a],u[i][a+1]],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),a<0&&(a=u[i][o].length-a-1),m([u[i][o][a],u[i][o][a+1]],s,t)}throw new Error("geojson is invalid")},findPoint:function(e,t){if(!v(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,o=t.geometryIndex||0,a=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return l(u,s,t);case"MultiPoint":return l(u[i=i<0?u.length+i:i],s,t);case"LineString":return l(u[a=a<0?u.length+a:a],s,t);case"Polygon":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a),l(u[o][a],s,t);case"MultiLineString":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),l(u[i][a],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),a<0&&(a=u[i][o].length-a),l(u[i][o][a],s,t)}throw new Error("geojson is invalid")}});function Y(e){if(!e)throw new Error("geojson is required");var t=[];return S(e,function(e){!function(t,r){var e=[],n=t.geometry;if(null!==n){switch(n.type){case"Polygon":e=b(n);break;case"LineString":e=[b(n)]}e.forEach(function(e){var a,s;(a=t.properties,s=[],e.reduce(function(e,t){var r,n,i,o=m([e,t],a);return o.bbox=(n=t,i=(r=e)[0],e=r[1],r=n[0],n=n[1],[i<r?i:r,e<n?e:n,r<i?i:r,n<e?e:n]),s.push(o),t}),s).forEach(function(e){e.id=r.length,r.push(e)})})}}(e,t)}),a(t)}var A,N=(function(e){e.exports=function(){"use strict";function e(e,t,r,n,i){d(e,t,r||0,n||e.length-1,i||o)}function d(e,t,r,n,i){while(n>r){if(n-r>600){var o=n-r+1;var a=t-r+1;var s=Math.log(o);var u=.5*Math.exp(2*s/3);var l=.5*Math.sqrt(s*u*(o-u)/o)*(a-o/2<0?-1:1);var c=Math.max(r,Math.floor(t-a*u/o+l));var h=Math.min(n,Math.floor(t+(o-a)*u/o+l));d(e,t,c,h,i)}var f=e[t];var p=r;var m=n;g(e,r,t);if(i(e[n],f)>0)g(e,r,n);while(p<m){g(e,p,m);p++;m--;while(i(e[p],f)<0)p++;while(i(e[m],f)>0)m--}if(i(e[r],f)===0)g(e,r,m);else{m++;g(e,m,n)}if(m<=t)r=m+1;if(t<=m)n=m-1}}function g(e,t,r){var n=e[t];e[t]=e[r];e[r]=n}function o(e,t){return e<t?-1:e>t?1:0}return e}()}(A={exports:{}}),A.exports),T=C,r=C;function C(e,t){if(!(this instanceof C))return new C(e,t);this._maxEntries=Math.max(4,e||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),t&&this._initFormat(t),this.clear()}function O(e,t){I(e,0,e.children.length,t,e)}function I(e,t,r,n,i){(i=i||D(null)).minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,a=t;a<r;a++)o=e.children[a],R(i,e.leaf?n(o):o);return i}function R(e,t){return e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY),e}function j(e,t){return e.minX-t.minX}function G(e,t){return e.minY-t.minY}function q(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function W(e){return e.maxX-e.minX+(e.maxY-e.minY)}function J(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function z(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function D(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Z(e,t,r,n,i){for(var o,a=[t,r];a.length;)(r=a.pop())-(t=a.pop())<=n||(o=t+Math.ceil((r-t)/n/2)*n,N(e,o,t,r,i),a.push(t,o,o,r))}function H(e){var t=[1/0,1/0,-1/0,-1/0];return L(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}C.prototype={all:function(){return this._all(this.data,[])},search:function(e){var t=this.data,r=[],n=this.toBBox;if(!z(e,t))return r;for(var i,o,a,s,u=[];t;){for(i=0,o=t.children.length;i<o;i++)a=t.children[i],z(e,s=t.leaf?n(a):a)&&(t.leaf?r.push(a):J(e,s)?this._all(a,r):u.push(a));t=u.pop()}return r},collides:function(e){var t=this.data,r=this.toBBox;if(!z(e,t))return!1;for(var n,i,o,a,s=[];t;){for(n=0,i=t.children.length;n<i;n++)if(o=t.children[n],z(e,a=t.leaf?r(o):o)){if(t.leaf||J(e,a))return!0;s.push(o)}t=s.pop()}return!1},load:function(e){if(!e||!e.length)return this;if(e.length<this._minEntries){for(var t=0,r=e.length;t<r;t++)this.insert(e[t]);return this}var n,i=this._build(e.slice(),0,e.length-1,0);return this.data.children.length?this.data.height===i.height?this._splitRoot(this.data,i):(this.data.height<i.height&&(n=this.data,this.data=i,i=n),this._insert(i,this.data.height-i.height-1,!0)):this.data=i,this},insert:function(e){return e&&this._insert(e,this.data.height-1),this},clear:function(){return this.data=D([]),this},remove:function(e,t){if(!e)return this;for(var r,n,i,o,a=this.data,s=this.toBBox(e),u=[],l=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],r=l.pop(),o=!0),a.leaf&&-1!==(i=function(e,t,r){if(!r)return t.indexOf(e);for(var n=0;n<t.length;n++)if(r(e,t[n]))return n;return-1}(e,a.children,t)))return a.children.splice(i,1),u.push(a),this._condense(u),this;o||a.leaf||!J(a,s)?n?(r++,a=n.children[r],o=!1):a=null:(u.push(a),l.push(r),a=(n=a).children[r=0])}return this},toBBox:function(e){return e},compareMinX:j,compareMinY:G,toJSON:function(){return this.data},fromJSON:function(e){return this.data=e,this},_all:function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},_build:function(e,t,r,n){var i,o=r-t+1,a=this._maxEntries;if(o<=a)return O(i=D(e.slice(t,r+1)),this.toBBox),i;n||(n=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,n-1))),(i=D([])).leaf=!1,i.height=n;var s,u,l,c,h=Math.ceil(o/a),f=h*Math.ceil(Math.sqrt(a));for(Z(e,t,r,f,this.compareMinX),s=t;s<=r;s+=f)for(Z(e,s,l=Math.min(s+f-1,r),h,this.compareMinY),u=s;u<=l;u+=h)c=Math.min(u+h-1,l),i.children.push(this._build(e,u,c,n-1));return O(i,this.toBBox),i},_chooseSubtree:function(e,t,r,n){for(var i,o,a,s,u,l,c,h,f;n.push(t),!t.leaf&&n.length-1!==r;){for(l=c=1/0,i=0,o=t.children.length;i<o;i++)u=q(a=t.children[i]),h=e,f=a,(h=(Math.max(f.maxX,h.maxX)-Math.min(f.minX,h.minX))*(Math.max(f.maxY,h.maxY)-Math.min(f.minY,h.minY))-u)<c?(c=h,l=u<l?u:l,s=a):h===c&&u<l&&(l=u,s=a);t=s||t.children[0]}return t},_insert:function(e,t,r){var n=this.toBBox,r=r?e:n(e),i=[],n=this._chooseSubtree(r,this.data,t,i);for(n.children.push(e),R(n,r);0<=t&&i[t].children.length>this._maxEntries;)this._split(i,t),t--;this._adjustParentBBoxes(r,i,t)},_split:function(e,t){var r=e[t],n=r.children.length,i=this._minEntries;this._chooseSplitAxis(r,i,n);n=this._chooseSplitIndex(r,i,n),n=D(r.children.splice(n,r.children.length-n));n.height=r.height,n.leaf=r.leaf,O(r,this.toBBox),O(n,this.toBBox),t?e[t-1].children.push(n):this._splitRoot(r,n)},_splitRoot:function(e,t){this.data=D([e,t]),this.data.height=e.height+1,this.data.leaf=!1,O(this.data,this.toBBox)},_chooseSplitIndex:function(e,t,r){for(var n,i,o,a,s,u,l,c,h,f=o=1/0,p=t;p<=r-t;p++)n=I(e,0,p,this.toBBox),i=I(e,p,r,this.toBBox),s=n,u=i,h=c=l=void 0,l=Math.max(s.minX,u.minX),c=Math.max(s.minY,u.minY),h=Math.min(s.maxX,u.maxX),u=Math.min(s.maxY,u.maxY),c=Math.max(0,h-l)*Math.max(0,u-c),i=q(n)+q(i),c<f?(f=c,a=p,o=i<o?i:o):c===f&&i<o&&(o=i,a=p);return a},_chooseSplitAxis:function(e,t,r){var n=e.leaf?this.compareMinX:j,i=e.leaf?this.compareMinY:G;this._allDistMargin(e,t,r,n)<this._allDistMargin(e,t,r,i)&&e.children.sort(n)},_allDistMargin:function(e,t,r,n){e.children.sort(n);for(var i,o=this.toBBox,a=I(e,0,t,o),s=I(e,r-t,r,o),u=W(a)+W(s),l=t;l<r-t;l++)i=e.children[l],R(a,e.leaf?o(i):i),u+=W(a);for(l=r-t-1;t<=l;l--)i=e.children[l],R(s,e.leaf?o(i):i),u+=W(s);return u},_adjustParentBBoxes:function(e,t,r){for(var n=r;0<=n;n--)R(t[n],e)},_condense:function(e){for(var t,r=e.length-1;0<=r;r--)0===e[r].children.length?0<r?(t=e[r-1].children).splice(t.indexOf(e[r]),1):this.clear():O(e[r],this.toBBox)},_initFormat:function(e){var t=["return a"," - b",";"];this.compareMinX=new Function("a","b",t.join(e[0])),this.compareMinY=new Function("a","b",t.join(e[1])),this.toBBox=new Function("a","return {minX: a"+e[0]+", minY: a"+e[1]+", maxX: a"+e[2]+", maxY: a"+e[3]+"};")}},T.default=r,H.default=H;var r=Object.freeze({default:H}),V=(r&&H).default,U=B.featureEach,K=w.featureCollection;function Q(e){e=T(e);return e.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||V(e),T.prototype.insert.call(this,e)},e.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||V(e),t.push(e)}):U(e,function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||V(e),t.push(e)}),T.prototype.load.call(this,t)},e.remove=function(e,t){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||V(e),T.prototype.remove.call(this,e,t)},e.clear=function(){return T.prototype.clear.call(this)},e.search=function(e){e=T.prototype.search.call(this,this.toBBox(e));return K(e)},e.collides=function(e){return T.prototype.collides.call(this,this.toBBox(e))},e.all=function(){var e=T.prototype.all.call(this);return K(e)},e.toJSON=function(){return T.prototype.toJSON.call(this)},e.fromJSON=function(e){return T.prototype.fromJSON.call(this,e)},e.toBBox=function(e){var t;if(e.bbox)t=e.bbox;else if(Array.isArray(e)&&4===e.length)t=e;else if(Array.isArray(e)&&6===e.length)t=[e[0],e[1],e[3],e[4]];else if("Feature"===e.type)t=V(e);else{if("FeatureCollection"!==e.type)throw new Error("invalid geojson");t=V(e)}return{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}},e}var $=Q;function ee(e,t){var n={},i=[];if("LineString"===e.type&&(e=c(e)),"LineString"===t.type&&(t=c(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length){var r=te(e,t);return r&&i.push(r),a(i)}var o=$();return o.load(Y(t)),k(Y(e),function(r){k(o.search(r),function(e){var t=te(r,e);t&&(e=b(t).join(","),n[e]||(n[e]=!0,i.push(t)))})}),a(i)}function te(e,t){var r=b(e),n=b(t);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=r[0][0],o=r[0][1],a=r[1][0],s=r[1][1],u=n[0][0],e=n[0][1],t=n[1][0],r=n[1][1],n=(r-e)*(a-i)-(t-u)*(s-o),r=(t-u)*(o-e)-(r-e)*(i-u),u=(a-i)*(o-e)-(s-o)*(i-u);if(0==n)return null;r/=n,n=u/n;return 0<=r&&r<=1&&0<=n&&n<=1?l([i+r*(a-i),o+r*(s-o)]):null}$.default=Q;var re=function(e,t){var r=_(e);switch((t=void 0===t?{}:t).properties||"Feature"!==e.type||(t.properties=e.properties),r.type){case"Polygon":return function(e,t){void 0===t&&(t={});var r=_(e).coordinates,e=t.properties||("Feature"===e.type?e.properties:{});return ne(r,e)}(r,t);case"MultiPolygon":return function(e,t){void 0===t&&(t={});var r=_(e).coordinates,n=t.properties||("Feature"===e.type?e.properties:{}),i=[];return r.forEach(function(e){i.push(ne(e,n))}),a(i)}(r,t);default:throw new Error("invalid poly")}};function ne(e,t){return 1<e.length?u(e,t):m(e[0],t)}function ie(e,r){var n=!0;return S(e,function(t){S(r,function(e){return!1!==n&&void(n=function(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!function(e,t){return e[0]===t[0]&&e[1]===t[1]}(e.coordinates,t.coordinates);case"LineString":return!oe(t,e);case"Polygon":return!x(e,t)}break;case"LineString":switch(t.type){case"Point":return!oe(e,t);case"LineString":return!function(e,t){if(0<ee(e,t).features.length)return!0;return!1}(e,t);case"Polygon":return!ae(t,e)}break;case"Polygon":switch(t.type){case"Point":return!x(t,e);case"LineString":return!ae(e,t);case"Polygon":return!function(e,t){for(var r=0,n=e.coordinates[0];r<n.length;r++)if(x(n[r],t))return!0;for(var i=0,o=t.coordinates[0];i<o.length;i++)if(x(o[i],e))return!0;if(0<ee(re(e),re(t)).features.length)return!0;return!1}(t,e)}}return!1}(t.geometry,e.geometry))})}),n}function oe(e,t){for(var r=0;r<e.coordinates.length-1;r++)if(function(e,t,r){var n=r[0]-e[0],i=r[1]-e[1],o=t[0]-e[0],a=t[1]-e[1];if(n*a-i*o!=0)return!1;return Math.abs(o)>=Math.abs(a)?0<o?e[0]<=r[0]&&r[0]<=t[0]:t[0]<=r[0]&&r[0]<=e[0]:0<a?e[1]<=r[1]&&r[1]<=t[1]:t[1]<=r[1]&&r[1]<=e[1]}(e.coordinates[r],e.coordinates[r+1],t.coordinates))return 1}function ae(e,t){for(var r=0,n=t.coordinates;r<n.length;r++)if(x(n[r],e))return 1;return 0<ee(t,re(e)).features.length}function se(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):function(e,t){for(var r=Object.getOwnPropertyNames(t),n=0;n<r.length;n++){var i=r[n],o=Object.getOwnPropertyDescriptor(t,i);o&&o.configurable&&void 0===e[i]&&Object.defineProperty(e,i,o)}}(e,t))}var ue,le="routetopo@cXiaof",ce=[{filter:["==","reachable",!0],symbol:[{markerType:"ellipse",markerFill:"#898989",markerWidth:10,markerHeight:10,markerLineWidth:0},{markerType:"ellipse",markerFill:"#8cc220",markerWidth:6,markerHeight:6,markerLineWidth:0}]},{filter:["==","reachable",!1],symbol:[{markerType:"ellipse",markerFill:"#898989",markerWidth:10,markerHeight:10,markerLineWidth:0},{markerType:"ellipse",markerFill:"#fbd600",markerWidth:6,markerHeight:6,markerLineWidth:0}]}],he={symbol:{markerType:"ellipse",markerFill:"#88b04b",markerWidth:12,markerHeight:12,markerLineWidth:0}},fe={symbol:{lineColor:"#88b04b"}},pe=[{filter:["==","main",!0],symbol:{lineColor:"#f9e547",lineWidth:2}},{filter:["==","main",!1],symbol:{lineColor:"#f9e547",lineDasharray:[18,5]}}],w=(se(me,ue=s.Eventable(s.Class)),me.prototype.addTo=function(e){return e&&(this._map=e,this._prepareInternalLayer()),this.fire("add"),this},me.prototype.getMap=function(){return this._map},me.prototype.remove=function(){return this.living&&(delete this._pointsName,this._pointsLayer.remove(),delete this._pointsLayer,delete this._resultName,this._resultLayer.remove(),delete this._resultLayer,delete this._crossName,this._crossLayer.remove(),delete this._crossLayer,delete this._previewName,this._previewLayer.remove(),delete this._previewLayer,this.living=!1),this},me.prototype.setDistance=function(e){return this.options.distance=e,this},me.prototype.start=function(){return this.living&&(this._map.setCursor("crosshair"),this._map.on("zoomstart",this._handleMapZoomstart,this),this._map.on("zoomend",this._handleMapZoomend,this),this._map.on("mousemove",this._handleMapMousemove,this),this._map.on("click",this._handleMapClick,this),this.working=!0,this.fire("start")),this},me.prototype.end=function(){return this.living&&(this._map.off("zoomstart",this._handleMapZoomstart,this),this._map.off("zoomend",this._handleMapZoomend,this),this._map.off("mousemove",this._handleMapMousemove,this),this._map.off("click",this._handleMapClick,this),this._map.resetCursor(),this.working=!1,this.fire("end",{result:this._getGeosCopyInLayer(this._resultLayer),cross:this._getGeosCopyInLayer(this._crossLayer)}),this.remove()),this},me.prototype.isWorking=function(){return this.working},me.prototype.isLiving=function(){return this.living},me.prototype._prepareInternalLayer=function(){this._pointsName=s.INTERNAL_LAYER_PREFIX+le+"__points",this._pointsLayer=new window.maptalks.VectorLayer(this._pointsName,this._getCopyPoints(),{style:ce}),this._pointsLayer.addTo(this._map).bringToFront(),this._resultName=s.INTERNAL_LAYER_PREFIX+le+"__result",this._resultLayer=new window.maptalks.VectorLayer(this._resultName,{style:fe}),this._resultLayer.addTo(this._map).bringToFront(),this._crossName=s.INTERNAL_LAYER_PREFIX+le+"__cross",this._crossLayer=new window.maptalks.VectorLayer(this._crossName,{style:he}),this._crossLayer.addTo(this._map).bringToFront(),this._previewName=s.INTERNAL_LAYER_PREFIX+le+"__preview",this._previewLayer=new window.maptalks.VectorLayer(this._previewName,{style:pe}),this._previewLayer.addTo(this._map).bringToFront()},me.prototype._getCopyPoints=function(){return this.options.points.reduce(function(e,t){return!t instanceof s.Marker||e.push(new s.Marker(t.getCoordinates(),{properties:{reachable:!1}})),e},[])},me.prototype._handleMapZoomstart=function(){this._map.off("mousemove",this._handleMapMousemove,this)},me.prototype._handleMapZoomend=function(){this._map.on("mousemove",this._handleMapMousemove,this)},me.prototype._handleMapMousemove=function(e){var t=this,r=e.coordinate,r={coordinate:this._coordinate=r,tolerance:this._getTolerance(),layers:[this._pointsName],includeInternals:!0};e.target.identify(r,function(e){t._identifyGeos=[];e=t._getPreviewLines(e);t._previewLayer.clear().addGeometry(e)})},me.prototype._handleMapClick=function(e){var t=this;new s.Marker(e.coordinate).addTo(this._crossLayer),this._previewLayer.forEach(function(e){e.copy().addTo(t._resultLayer)}),this._identifyGeos.forEach(function(e){e.setProperties({reachable:!0})}),this._previewLayer.clear()},me.prototype._getTolerance=function(){var e=this.options.distance;return~~this._map.distanceToPixel(e,0).width},me.prototype._getPreviewLines=function(e){var t=this._crossLayer.getGeometries(),r=this._getTrafficLines(t);if(0<t.length&&0===r.length)return[];e=this._getTargetLines(e);return[].concat(r,e)},me.prototype._getTrafficLines=function(e){var r=this;return e.reduce(function(e,t){return r._getLineNoIntersects(e,t,!0)},[])},me.prototype._getTargetLines=function(e){var r=this;return e.reduce(function(e,t){return r._getLineNoIntersects(e,t,!1)},[])},me.prototype._getLineNoIntersects=function(e,t,r){var n,i,o=[this._coordinate,t.getCoordinates()],a=new s.LineString(o,{properties:{main:r}});return o=a.toGeoJSON(),n=this._getObstacles(),i=!1,S(o,function(t){S(n,function(e){return!0===i||void(i=!ie(t.geometry,e.geometry))})}),i||(e.push(a),r||this._identifyGeos.push(t)),e},me.prototype._getObstacles=function(){return new s.GeometryCollection(this.options.obstacles).toGeoJSON()},me.prototype._getGeosCopyInLayer=function(e){return e.getGeometries().map(function(e){return e.copy()})},me);function me(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,me);e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,ue.call(this,e));return e.living=!0,e.working=!1,e}w.mergeOptions({points:[],obstacles:[],distance:4}),e.Routetopo=w,Object.defineProperty(e,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.routetopo v0.1.0-alpha.1, requires maptalks@>=0.47.0.")});